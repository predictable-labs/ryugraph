name: Build Linux Precompiled Binaries

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      isNightly:
        type: boolean
        required: true
        default: false
      x86_64Only:
        type: boolean
        required: false
        default: false

env:
  PIP_BREAK_SYSTEM_PACKAGES: 1

jobs:
  build-precompiled-bin-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update nightly version
        if: ${{ inputs.isNightly == true }}
        run: |
          /opt/python/cp310-cp310/bin/python -m pip install packaging
          /opt/python/cp310-cp310/bin/python update-nightly-build-version.py
        working-directory: scripts

      - name: Build precompiled binaries
        run: |
          make NUM_THREADS=$(nproc)
          make install

      - name: Collect artifacts
        run: |
          mv install/include/ryu.h .
          mv install/include/ryu.hpp .
          mv install/lib64/libryu.so .
          mv install/bin/ryu .

      - name: Create tarball
        run: |
          tar -czvf libryu-linux-x86_64.tar.gz ryu.h ryu.hpp libryu.so
          tar -czvf ryu_cli-linux-x86_64.tar.gz ryu

      - uses: actions/upload-artifact@v4
        with:
          name: libryu-linux-x86_64
          path: libryu-linux-x86_64.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: ryu_cli-linux-x86_64
          path: ryu_cli-linux-x86_64.tar.gz

  build-precompiled-bin-aarch64:
    if: ${{ inputs.x86_64Only != true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update nightly version
        if: ${{ inputs.isNightly == true }}
        run: |
          /opt/python/cp310-cp310/bin/python -m pip install packaging
          /opt/python/cp310-cp310/bin/python update-nightly-build-version.py
        working-directory: scripts

      - name: Build precompiled binaries
        run: |
          make NUM_THREADS=$(nproc)
          make install

      - name: Collect artifacts
        run: |
          mv install/include/ryu.h .
          mv install/include/ryu.hpp .
          mv install/lib64/libryu.so .
          mv install/bin/ryu .

      - name: Create tarball
        run: |
          tar -czvf libryu-linux-aarch64.tar.gz ryu.h ryu.hpp libryu.so
          tar -czvf ryu_cli-linux-aarch64.tar.gz ryu

      - uses: actions/upload-artifact@v4
        with:
          name: libryu-linux-aarch64
          path: libryu-linux-aarch64.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: ryu_cli-linux-aarch64
          path: ryu_cli-linux-aarch64.tar.gz

  build-precompiled-bin-android-armv8a:
    if: ${{ inputs.x86_64Only != true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update nightly version
        if: ${{ inputs.isNightly == true }}
        run: |
          python3 -m pip install packaging
          python3 update-nightly-build-version.py
        working-directory: scripts

      - name: Build precompiled binaries
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake -DANDROID_ABI=arm64-v8a  ..
          make -j$(nproc)
          cd ..
          cmake --install build --prefix install
    
      - name: Collect artifacts
        run: |
          mv install/include/ryu.h .
          mv install/include/ryu.hpp .
          mv install/lib/libryu.so .
          mv install/bin/ryu .
        
      - name: Create tarball
        run: |
          tar -czvf libryu-android-armv8a.tar.gz ryu.h ryu.hpp libryu.so
          tar -czvf ryu_cli-android-armv8a.tar.gz ryu
        
      - uses: actions/upload-artifact@v4
        with:
          name: libryu-android-armv8a
          path: libryu-android-armv8a.tar.gz
        
      - uses: actions/upload-artifact@v4
        with:
          name: ryu_cli-android-armv8a
          path: ryu_cli-android-armv8a.tar.gz
